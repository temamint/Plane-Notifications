const TurndownService = require('turndown');
const { getUserNameById } = require('./users');
const turndownService = new TurndownService();
const { getProjectNameById } = require('./projectServices');

function formatIssueMessage(action, data) {
	let description = 'N/A';
	if (typeof data.description_html === 'string' && data.description_html.trim()) {
		description = turndownService.turndown(data.description_html);
	} else if (typeof data.description_stripped === 'string') {
		description = data.description_stripped;
	}

	let title;
	switch (action) {
		case 'created': title = 'üÜï –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞'; break;
		case 'updated': title = '‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏'; break;
		case 'deleted': title = 'üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞'; break;
		default: title = `*ISSUE* ‚Äî ${action}`;
	}

	console.log('data:', data);

	return `${title}
*–ü—Ä–æ–µ–∫—Ç:* ${getProjectNameById(data.project_id)}
*–ù–∞–∑–≤–∞–Ω–∏–µ:* ${data.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}
*–û–ø–∏—Å–∞–Ω–∏–µ:* ${description}
*–ê–≤—Ç–æ—Ä:* ${getUserNameById(data.updated_by)}`;
}

function formatCommentMessage(action, data) {
	const content = typeof data.comment_stripped === 'object'
		? JSON.stringify(data.comment_stripped, null, 2)
		: data.comment_stripped || '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–µ–∑ —Ç–µ–∫—Å—Ç–∞';

	let title;
	switch (action) {
		case 'created': title = 'üí¨ –ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'; break;
		case 'updated': title = '‚úèÔ∏è –û–±–Ω–æ–≤–ª—ë–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'; break;
		case 'deleted': title = 'üóëÔ∏è –£–¥–∞–ª—ë–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'; break;
		default: title = `*COMMENT* (${action})`;
	}

	return `${title}
*–ê–≤—Ç–æ—Ä:* ${getUserNameById(data.created_by)}
*–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:* ${content}`;
}

module.exports = {
	formatIssueMessage,
	formatCommentMessage
};