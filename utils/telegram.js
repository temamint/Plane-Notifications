const bot = require('../bot');
const {
	getNotifications,
	clearNotifications,
	getLastMessage,
	setLastMessage
} = require('./notificationBuffer');
const { escapeMarkdown } = require('./markdownFormatter');

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–¥–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
 * @param {number} chatId ‚Äî –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
 */
async function sendSummaryNotification(chatId) {
	const notifs = getNotifications(chatId);
	if (!notifs.length) {
		console.log(`‚ÑπÔ∏è –ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç ${chatId}`);
		return;
	}

	// –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
	const lastMessageId = getLastMessage(chatId);
	if (lastMessageId) {
		try {
			console.log(`üóë –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${lastMessageId} –∏–∑ —á–∞—Ç–∞ ${chatId}`);
			await bot.deleteMessage(chatId, lastMessageId);
			console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ${lastMessageId}`);

			console.log(`üóë –£–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ${lastMessageId} –≤ —á–∞—Ç–µ ${chatId}`);
		} catch (err) {
			console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${lastMessageId} –≤ —á–∞—Ç–µ ${chatId}:`, err.message);
		}
	}

	const text = `üîî *${notifs.length} –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:*\n\n` +
		notifs.map(n =>
			`‚Ä¢ ${n.emoji || 'üìù'} *${escapeMarkdown(n.issueKey)}* ‚Äî ${escapeMarkdown(n.title)}`
		).join('\n');

	const buttons = [
		...notifs.map(n => [{ text: `üìÑ ${n.issueKey}`, callback_data: `detail_${n.issueId}` }]),
		[{ text: 'üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—ë', callback_data: `view_all` }],
		[{ text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å', callback_data: 'close_summary' }]
	];

	try {
		const message = await bot.sendMessage(chatId, text, {
			parse_mode: 'Markdown',
			reply_markup: {
				inline_keyboard: buttons
			}
		});

		setLastMessage(chatId, message.message_id);
		console.log(`‚úÖ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: ${message.message_id}) –≤ —á–∞—Ç ${chatId}`);
		clearNotifications(chatId);
	} catch (err) {
		console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç ${chatId}:`, err.message);
	}
}

module.exports = {
	sendSummaryNotification
};
