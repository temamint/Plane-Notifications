const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();
const { saveTelegramUserInfo } = require('./utils/userService');

const {
	getIssueDetailsMessage, // —Ç—ã –ø–æ—Ç–æ–º –Ω–∞–ø–∏—à–µ—à—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
	getAllDetailsMessage    // —Ç–æ–∂–µ –Ω–∞–ø–∏—à–µ—à—å
} = require('./utils/messageFormatter');
const {
	sendTelegramMessage // –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–∞ –±—É–¥—É—â–µ–µ
} = require('./utils/telegram');

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ª—é–±–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
bot.on('message', (msg) => {
	const user = msg.from;
	saveTelegramUserInfo(user);

	console.log(`üì• –ù–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username || user.first_name} (${user.id})`);

	bot.sendMessage(user.id, '‚úÖ –Ø —Ç–µ–±—è –∑–∞–ø–æ–º–Ω–∏–ª. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –∞–¥–º–∏–Ω —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Plane.');
});

bot.on('callback_query', async (query) => {
	const chatId = query.message.chat.id;
	const messageId = query.message.message_id;
	const data = query.data;

	try {
		if (data.startsWith('detail_')) {
			const issueId = data.split('_')[1];
			const msg = await getIssueDetailsMessage(issueId);
			await bot.sendMessage(chatId, msg, { parse_mode: 'Markdown' });
		}

		if (data === 'view_all') {
			const msg = await getAllDetailsMessage(chatId);
			await bot.sendMessage(chatId, msg, { parse_mode: 'Markdown' });
		}

		if (data === 'close_summary') {
			await bot.deleteMessage(chatId, messageId);
		}

		// –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
		await bot.answerCallbackQuery(query.id);
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback:', err.message);
		await bot.answerCallbackQuery(query.id, { text: '–û—à–∏–±–∫–∞ üò¢' });
	}
});

module.exports = bot;
